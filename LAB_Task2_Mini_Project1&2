#Mini Project 1

 for number in range(1, 101):
     if number % 3 == 0 and number % 5 == 0:
         print("Fizz Buzz")
     elif number % 3 == 0:
         print("Fizz")
     elif number % 5 == 0:
         print("Buzz")
     else:
         print(number)



#Mini Project 2

movies = [
    ("Eternal Sunshine of the Spotless Mind", 20000000),
    ("Memento", 9000000),
    ("Requiem for a Dream", 4500000),
    ("Pirates of the Caribbean: On Stranger Tides", 379000000),
    ("Avengers: Age of Ultron", 365000000),
    ("Avengers: Endgame", 356000000),
    ("Incredibles 2", 200000000)
]

# Function to calculate the average budget of all movies
def calculate_average_budget(movies):
    total_budget = sum(movie[1] for movie in movies)  # Sum of all movie budgets
    return total_budget / len(movies)  # Average budget

# Function to find movies with budget higher than the average
def find_high_budget_movies(movies, average_budget):
    high_budget_movies = []
    for movie in movies:
        if movie[1] > average_budget:
            high_budget_movies.append((movie[0], movie[1] - average_budget))  # Add movie and how much higher than the average
    return high_budget_movies

# Function to display the high-budget movies and how much higher they are
def display_high_budget_movies(high_budget_movies):
    print("\nMovies with a budget higher than the average:")
    for movie, extra_budget in high_budget_movies:
        print(f"{movie}: ${extra_budget:,} more than the average")

# Function to allow the user to add movies
def add_movies():
    num_movies = int(input("How many movies would you like to add? "))
    for _ in range(num_movies):
        name = input("Enter movie name: ")
        budget = int(input(f"Enter budget for '{name}': "))
        movies.append((name, budget))  # Add the new movie to the list

# Main program
def main():
    # Ask if the user wants to add new movies
    add_more = input("Do you want to add more movies? (yes/no): ").lower()
    if add_more == "yes":
        add_movies()

    # Calculate average budget
    average_budget = calculate_average_budget(movies)
    print(f"\nThe average budget of the movies is: ${average_budget:,.2f}")

    # Find and display high-budget movies
    high_budget_movies = find_high_budget_movies(movies, average_budget)
    display_high_budget_movies(high_budget_movies)

    # Display the count of movies with a higher-than-average budget
    print(f"\nTotal number of movies with a higher-than-average budget: {len(high_budget_movies)}")
main()
